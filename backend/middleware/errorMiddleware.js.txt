```javascript
// File: backend/middleware/errorMiddleware.js

/**
 * Custom error handling middleware.
 */
const notFound = (req, res, next) => {
    const error = new Error(`Not Found - ${req.originalUrl}`);
    res.status(404);
    next(error); // Pass the error to the global error handler
};

const errorHandler = (err, req, res, next) => {
    // Sometimes an error might come with a status code, otherwise default to 500
    const statusCode = res.statusCode === 200 ? 500 : res.statusCode;
    res.status(statusCode);

    console.error("Global Error Handler Caught:");
    console.error("Message:", err.message);
    console.error("Stack:", process.env.NODE_ENV === 'production' ? 'ðŸ¥ž' : err.stack);


    res.json({
        message: err.message,
        // Send stack trace only in development mode for security reasons
        stack: process.env.NODE_ENV === 'production' ? null : err.stack,
    });
};

module.exports = { notFound, errorHandler };
